# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/date/all/date.rbi
#
# date-3.3.4

class Date
  def +(other); end
  def -(other); end
  def <<(arg0); end
  def <=>(other); end
  def ===(arg0); end
  def >>(arg0); end
  def ajd; end
  def amjd; end
  def asctime; end
  def ctime; end
  def cwday; end
  def cweek; end
  def cwyear; end
  def day; end
  def day_fraction; end
  def deconstruct_keys(arg0); end
  def downto(arg0); end
  def england; end
  def eql?(arg0); end
  def friday?; end
  def gregorian; end
  def gregorian?; end
  def hash; end
  def hour; end
  def httpdate; end
  def infinite?; end
  def initialize(*arg0); end
  def initialize_copy(arg0); end
  def inspect; end
  def iso8601; end
  def italy; end
  def jd; end
  def jisx0301; end
  def julian; end
  def julian?; end
  def ld; end
  def leap?; end
  def marshal_dump; end
  def marshal_load(arg0); end
  def mday; end
  def min; end
  def minute; end
  def mjd; end
  def mon; end
  def monday?; end
  def month; end
  def new_start(*arg0); end
  def next; end
  def next_day(*arg0); end
  def next_month(*arg0); end
  def next_year(*arg0); end
  def prev_day(*arg0); end
  def prev_month(*arg0); end
  def prev_year(*arg0); end
  def rfc2822; end
  def rfc3339; end
  def rfc822; end
  def saturday?; end
  def sec; end
  def second; end
  def self._httpdate(*arg0); end
  def self._iso8601(*arg0); end
  def self._jisx0301(*arg0); end
  def self._load(arg0); end
  def self._parse(*arg0); end
  def self._rfc2822(*arg0); end
  def self._rfc3339(*arg0); end
  def self._rfc822(*arg0); end
  def self._strptime(*arg0); end
  def self._xmlschema(*arg0); end
  def self.civil(*arg0); end
  def self.commercial(*arg0); end
  def self.gregorian_leap?(arg0); end
  def self.httpdate(*arg0); end
  def self.iso8601(*arg0); end
  def self.jd(*arg0); end
  def self.jisx0301(*arg0); end
  def self.julian_leap?(arg0); end
  def self.leap?(arg0); end
  def self.ordinal(*arg0); end
  def self.parse(*arg0); end
  def self.rfc2822(*arg0); end
  def self.rfc3339(*arg0); end
  def self.rfc822(*arg0); end
  def self.strptime(*arg0); end
  def self.today(*arg0); end
  def self.valid_civil?(*arg0); end
  def self.valid_commercial?(*arg0); end
  def self.valid_date?(*arg0); end
  def self.valid_jd?(*arg0); end
  def self.valid_ordinal?(*arg0); end
  def self.xmlschema(*arg0); end
  def start; end
  def step(*arg0); end
  def strftime(*arg0); end
  def succ; end
  def sunday?; end
  def thursday?; end
  def to_date; end
  def to_datetime; end
  def to_s; end
  def to_time(form = nil); end
  def tuesday?; end
  def upto(arg0); end
  def wday; end
  def wednesday?; end
  def xmlschema; end
  def yday; end
  def year; end
end
class DateTime < Date
  def deconstruct_keys(arg0); end
  def hour; end
  def iso8601(*arg0); end
  def jisx0301(*arg0); end
  def min; end
  def minute; end
  def new_offset(*arg0); end
  def offset; end
  def rfc3339(*arg0); end
  def sec; end
  def sec_fraction; end
  def second; end
  def second_fraction; end
  def self._strptime(*arg0); end
  def self.civil(*arg0); end
  def self.commercial(*arg0); end
  def self.httpdate(*arg0); end
  def self.iso8601(*arg0); end
  def self.jd(*arg0); end
  def self.jisx0301(*arg0); end
  def self.new(*arg0); end
  def self.now(*arg0); end
  def self.ordinal(*arg0); end
  def self.parse(*arg0); end
  def self.rfc2822(*arg0); end
  def self.rfc3339(*arg0); end
  def self.rfc822(*arg0); end
  def self.strptime(*arg0); end
  def self.xmlschema(*arg0); end
  def strftime(*arg0); end
  def to_date; end
  def to_datetime; end
  def to_s; end
  def to_time; end
  def xmlschema(*arg0); end
  def zone; end
end
class Time
  def to_date; end
  def to_datetime; end
  def to_time; end
end
class Date::Infinity < Numeric
  def +@; end
  def -@; end
  def <=>(other); end
  def abs; end
  def coerce(other); end
  def d; end
  def finite?; end
  def infinite?; end
  def initialize(d = nil); end
  def nan?; end
  def to_f; end
  def zero?; end
end
